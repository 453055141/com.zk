#logging.config=classpath:logback.xml
#logging.level.root=info
#logging.path:/log# 在/var/logs目录下生成spring.log文件
#logging.file: /var/logs/test.log # 在/var/logs目录下生成test.log文件

#druid.filters.log4j2=com.alibaba.druid.filter.logging.Log4j2Filter

server.port=8088
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
security.basic.enabled=false
#Spring Boot Actuator监控端点开启
#management.security.enabled=false
#security.user.name=admin
#security.user.password=admin

#mybatis.typeAliasesPackage=com.zk.zkbootpojo.entity.masterModel,com.zk.zkbootpojo.entity.masterModel
#mybatis.typeAliasesPackage=com.zk.boot.zkbootweb.model
#mybatis.mapperLocations=classpath:com.zk.boot.zkbootweb.mapper/*.xml

#数据库连接
#spring.datasource.url=jdbc:mysql://119.23.106.184:3306/zk_project
#spring.datasource.username=zengkai
#spring.datasource.password=1992111
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

## master 数据源配置
master.datasource.url=jdbc:mysql://119.23.106.184:3306/zk_project?useUnicode=true&characterEncoding=utf8
master.datasource.username=zengkai
master.datasource.password=1992111
master.datasource.driverClassName=com.mysql.jdbc.Driver

## cluster 数据源配置
cluster.datasource.url=jdbc:mysql://119.23.106.184:3306/zk_project_two?useUnicode=true&characterEncoding=utf8
cluster.datasource.username=zengkai
cluster.datasource.password=1992111
cluster.datasource.driverClassName=com.mysql.jdbc.Driver

#spring.datasource.minPoolSize = 3
#spring.datasource.maxPoolSize = 25
#spring.datasource.maxLifetime = 20000
#spring.datasource.borrowConnectionTimeout = 30
#spring.datasource.loginTimeout = 30
#spring.datasource.maintenanceInterval = 60
#spring.datasource.maxIdleTime = 60
#spring.datasource.validationQuery = select 1

##durid监控
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=119.23.106.184
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=zk1992111
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0

# kafka
#kafka.consumer.zookeeper.connect=119.23.106.184:2181
spring.kafka.bootstrap-servers=119.23.106.184:9092
spring.kafka.consumer.group-id=myGroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

##activemq
#spring.activemq.broker-url=tcp://127.0.0.1:61616
## 在考虑结束之前等待的时间
##spring.activemq.close-timeout=15s
## 默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值。
#spring.activemq.in-memory=true
## 是否在回滚回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留。
#spring.activemq.non-blocking-redelivery=false
## 密码
#spring.activemq.password=123456
## 等待消息发送响应的时间。设置为0等待永远。
#spring.activemq.send-timeout=0
#spring.activemq.user=admin
##发布订阅模式的支持
#spring.jms.pub-sub-domain=true

# 是否信任所有包
#spring.activemq.packages.trust-all=
# 要信任的特定包的逗号分隔列表（当不信任所有包时）
#spring.activemq.packages.trusted=
# 当连接请求和池满时是否阻塞。设置false会抛“JMSException异常”。
#spring.activemq.pool.block-if-full=true
# 如果池仍然满，则在抛出异常前阻塞时间。
#spring.activemq.pool.block-if-full-timeout=-1ms
# 是否在启动时创建连接。可以在启动时用于加热池。
#spring.activemq.pool.create-connection-on-startup=true
# 是否用Pooledconnectionfactory代替普通的ConnectionFactory。
#spring.activemq.pool.enabled=false
# 连接过期超时。
#spring.activemq.pool.expiry-timeout=0ms
# 连接空闲超时
#spring.activemq.pool.idle-timeout=30s
# 连接池最大连接数
#spring.activemq.pool.max-connections=1
# 每个连接的有效会话的最大数目。
#spring.activemq.pool.maximum-active-session-per-connection=500
# 当有"JMSException"时尝试重新连接
#spring.activemq.pool.reconnect-on-exception=true
# 在空闲连接清除线程之间运行的时间。当为负数时，没有空闲连接驱逐线程运行。
#spring.activemq.pool.time-between-expiration-check=-1ms
# 是否只使用一个MessageProducer
#spring.activemq.pool.use-anonymous-producers=true